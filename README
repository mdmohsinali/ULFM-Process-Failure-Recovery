/************************************************************************************ 
 * File       : README                                                              *
 * Description: Contains detailed information about how to use the code             *
                to reconstruct faulty communicator by performing in-order failed    *
                process replacement, and other supporting functions to achieve this *
 * Author     : Md Mohsin Ali (mohsin.ali<AT>anu.edu.au)                                *
 * Created    : August 2013                                                         *
 * Updated    : December 2015                                                       *
 ************************************************************************************/

1.  HOW TO RUN?

    make; make run;

2.  WHAT ARE THE PARAMETERS OF THE PROGRAM?

    (a) mpirun -np NUM_PROCS <ARGUMENTS> ./ProcsFailureRecovery [n], where n represents
        how many times failures and recoveries will occur (default is 1)
    (b) Some <ARGUMENTS> are in Makefile

3.  WHAT IS THE TESTED SYSTEM CONFIGURATION?

    (a) Git revision icldistcomp-ulfm-46b781a8f170 (as of 13 December 2014)
    (b) gcc version 4.6.4 (GCC)   
    (c) Head node of Raijin cluster (http://nci.org.au/~raijin/)

4.  IS THERE ANY ALTERNATIVE VERSION OF ULFM MPI TO TEST WITH?

    Yes. If the above git revision does not meet the requirements, there is
    another way as follows to try.

    This needs a combination of files from two git revisions. Install
    git revision icldistcomp-ulfm-3bc561b48416 (as of Mid-June 2013)
    with the following updates from git revision 
    icldistcomp-ulfm-c351e0e792a8 (as of 21 May 2014).

    (a) /ompi/mca/coll/ftbasic/coll_ftbasic_agreement_earlyterminating.c
    (b) /ompi/mca/coll/base/coll_tags.h
    (c) /ompi/mca/coll/ftbasic/coll_ftbasic.h
    (d) /ompi/mca/coll/ftbasic/coll_ftbasic_component.c
    (e) /ompi/mca/coll/ftbasic/coll_ftbasic_module.c
    (f) /ompi/communicator/comm_ft.c
    (g) /ompi/communicator/comm_ft_revoke.c
    (h) /ompi/errhandler/errhandler_rte.c
    (i) /ompi/mca/pml/ob1/pml_ob1.c

5.  WHAT CAN I DO IF THE EXECUTION HANGS ON?

    The sleep times in "ProcsFailureRecovery.cpp" file could be increased
    to fix this problem. The default sleep times are set as "sleep(2);"
    and "sleep(5);".

6.  WHAT CHANGES ARE NEEDED TO RUN ON COMPUTE NODES?

    Remove single-line comment from "#define RUN_ON_COMPUTE_NODES" 
    in "FailureRecovery.cpp" file and run program with a machinefile 
    named "hostfile"

7.  WHAT CHANGES ARE NEEDED TO SPAWN REPLACEMENT PROCESSES ON SPARE NODES TO HANDLE
    NODE FAILURES?

    Remove single-line comment from "#define RUN_ON_COMPUTE_NODES" and 
    "#define RECOV_ON_SPARE_NODES" in "FailureRecovery.cpp" file and run 
    program with a machinefile named "hostfile"

8.  IS THERE ANY LICENSE TO USE THE CODE?

    Yes. See the LICENSE file.

9.  IS THERE ANY OTHER WAY TO ACKNOWLEDGE THE USE OF THE CODE?

    Yes. Cite the following paper.
    @INPROCEEDINGS{doi:10.1109/IPDPSW.2014.132,
        author = {Ali, Md Mohsin and Southern, James and Strazdins, Peter E and
                 Harding, Brendan},
        title = {Application Level Fault Recovery: Using {Fault-Tolerant} {O}pen
                {MPI} in a {PDE} Solver},
        booktitle = {Proceedings of the IEEE 28th International Parallel \& Distributed
                Processing Symposium Workshops (IPDPSW 2014)},
        address = {Phoenix, USA},
        pages = {1169--1178},
        doi = {10.1109/IPDPSW.2014.132},
        days = {19},
        month = {May},
        year = {2014},
    }

10. HOW TO CONTACT IF THERE IS ANY PROBLEM?

    Send an email to mohsin.ali<AT>anu.edu.au 
